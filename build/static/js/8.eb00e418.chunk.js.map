{"version":3,"sources":["shared/components/UIElements/Card.js","recipes/components/RecipeItem.js","recipes/components/RecipeList.js","recipes/pages/UserRecipes.js"],"names":["Card","props","className","style","children","RecipeItem","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","AuthContext","useState","showConfirmModal","setShowConfirmModal","cancelDeleteHandler","a","confirmDeleteHandler","process","id","Authorization","token","onDelete","Fragment","ErrorModal","onClear","Modal","show","onCancel","header","footerClass","footer","Button","inverse","onClick","danger","LoadingSpinner","asOverlay","src","image","alt","title","address","description","window","open","userId","creatorId","to","RecipeList","items","length","map","recipe","key","creator","coordinates","location","onDeleteRecipe","UserRecipes","loadedRecipes","setLoadedRecipes","useParams","useEffect","responseData","recipes","fetchPlaces","deletedRecipeId","prevRecipes","filter"],"mappings":"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","file":"static/js/8.eb00e418.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\n// import Map from '../../shared/components/UIElements/Map';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './RecipeItem.css';\n\nconst RecipeItem = props => {\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const openRecipeHandler = () => {\n    window.open(props.address, '_blank');\n  };\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = async () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(process.env.REACT_APP_BACKEND_URL + `/recipes/${props.id}`,\n        'DELETE',\n        null,\n        {\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"recipe-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Definitely delete this recipe? Please note, this can't be undone.\n        </p>\n      </Modal>\n      <li className=\"recipe-item\">\n        <Card className=\"recipe-item__content\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"recipe-item__image\">\n            <img src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n            alt={props.title} />\n          </div>\n          <div className=\"recipe-item__info\">\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"recipe-item__actions\">\n            <Button inverse onClick={openRecipeHandler}>\n              VIEW SITE\n            </Button>\n            {auth.userId === props.creatorId && (\n              <Button to={`/recipes/${props.id}`}>EDIT</Button>\n            )}\n\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default RecipeItem;\n","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport RecipeItem from './RecipeItem';\nimport Button from '../../shared/components/FormElements/Button';\nimport './RecipeList.css';\n\nconst RecipeList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"recipe-list center\">\n        <Card>\n          <h2>No recipes found. Create one?</h2>\n          <Button to=\"/recipes/new\">Share Recipe</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"recipe-list\">\n      {props.items.map(recipe => (\n        <RecipeItem\n          key={recipe.id}\n          id={recipe.id}\n          image={recipe.image}\n          title={recipe.title}\n          description={recipe.description}\n          address={recipe.address}\n          creatorId={recipe.creator}\n          coordinates={recipe.location}\n          onDelete={props.onDeleteRecipe}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default RecipeList;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport RecipeList from '../components/RecipeList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst UserRecipes = () => {\n  const [loadedRecipes, setLoadedRecipes] = useState();\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/recipes/user/${userId}`\n        );\n        setLoadedRecipes(responseData.recipes);\n      } catch (err) {}\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const recipeDeletedHandler = deletedRecipeId => {\n    setLoadedRecipes(prevRecipes =>\n      prevRecipes.filter(recipe => recipe.id !== deletedRecipeId)\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedRecipes && <RecipeList items={loadedRecipes} onDeleteRecipe={recipeDeletedHandler}/>}\n    </React.Fragment>\n  )\n};\n\nexport default UserRecipes;\n"],"sourceRoot":""}