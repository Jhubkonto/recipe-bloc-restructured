{"version":3,"sources":["shared/util/validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","recipes/pages/NewRecipe.js"],"names":["VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","trim","length","test","inputReducer","state","action","isTouched","Input","props","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","target","touchHandler","element","placeholder","onChange","onBlur","rows","className","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","ImageUpload","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","pickedFile","localBase64","fileIsValid","files","reader","onloadend","b64","base64data","Buffer","toString","localStorage","setItem","getItem","console","log","center","src","alt","onClick","current","click","NewRecipe","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","title","description","address","image","inputHandler","history","useHistory","recipeSubmitHandler","a","preventDefault","formData","FormData","append","process","Authorization","token","push","Fragment","onClear","onSubmit","asOverlay","disabled"],"mappings":"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","file":"static/js/4.da4ea3f1.chunk.js","sourcesContent":["const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile;\n    /////////////////////\n    let localBase64;\n    /////////////////////\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n\n      //////////////////////\n      const reader = new FileReader();\n\n      reader.onloadend = function () {\n        // Since it contains the Data URI, we should remove the prefix and keep only Base64 string\n        let b64 = reader.result;\n        let buff = new Buffer(b64);\n        let base64data = buff.toString('base64');\n        // console.log(base64data);\n        localStorage.setItem('myImage', base64data);\n\n        // console.log(\"b64 converted to a string is \" + base64data + '\"');\n\n        let decoded = new Buffer(base64data, 'base64');\n        let plainText = decoded.toString('ascii');\n\n        // console.log(\"Back to b64 is \" + plainText + '\"');\n\n        // .replace(\"data:\", \"\")\n        // .replace(/^.+,/, \"\");\n        // console.log(b64);\n      };\n      reader.readAsDataURL(pickedFile);\n      localBase64 = localStorage.getItem('myImage');\n      console.log(localBase64);\n\n      //////////////////////\n\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    // props.onInput(props.id, pickedFile, fileIsValid);\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './RecipeForm.css';\nimport { AuthContext } from '../../shared/context/auth-context';\n\nconst NewRecipe = () => {\n  const auth = useContext(AuthContext);\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      },\n      address: {\n        value: '',\n        isValid: false\n      },\n      image: {\n        value: null,\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const recipeSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append('title', formState.inputs.title.value);\n      formData.append('description', formState.inputs.description.value);\n      formData.append('address', formState.inputs.address.value);\n      formData.append('image', formState.inputs.image.value);\n      await sendRequest(process.env.REACT_APP_BACKEND_URL + '/recipes',\n        'POST',\n        formData, {\n          Authorization: 'Bearer ' + auth.token\n        });\n    history.push('/');\n    // What happens if no connection to backend?\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n    <ErrorModal error={error} onClear={clearError} />\n    <form className=\"recipe-form\" onSubmit={recipeSubmitHandler}>\n      {isLoading && <LoadingSpinner asOverlay />}\n      <Input\n        id=\"title\"\n        element=\"input\"\n        type=\"text\"\n        label=\"Title\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid title.\"\n        onInput={inputHandler}\n      />\n      <Input\n        id=\"description\"\n        element=\"textarea\"\n        label=\"Description\"\n        validators={[VALIDATOR_MINLENGTH(5)]}\n        errorText=\"Please enter a valid description (at least 5 characters).\"\n        onInput={inputHandler}\n      />\n      <Input\n        id=\"address\"\n        element=\"input\"\n        type=\"url\"\n        label=\"Weblink\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid internet address.\"\n        onInput={inputHandler}\n      />\n      <ImageUpload\n        id=\"image\"\n        onInput={inputHandler}\n        errorText=\"\"\n      />\n      <Button type=\"submit\" disabled={!formState.isValid}>\n        ADD RECIPE\n      </Button>\n    </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewRecipe;\n"],"sourceRoot":""}