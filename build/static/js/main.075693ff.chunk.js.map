{"version":3,"sources":["shared/components/FormElements/Button.js","shared/components/UIElements/LoadingSpinner.js","shared/context/auth-context.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/hooks/http-hook.js","shared/components/UIElements/Modal.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","recipes/components/RecipeItem.js","recipes/components/RecipeList.js","recipes/pages/UserRecipes.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","LoadingSpinner","asOverlay","AuthContext","createContext","isLoggedIn","userId","token","login","logout","Card","style","ErrorModal","onCancel","onClear","header","show","error","footer","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Modal","Fragment","in","mountOnEnter","unmountOnExit","timeout","classNames","Backdrop","logoutTimer","RecipeItem","auth","useContext","showConfirmModal","setShowConfirmModal","cancelDeleteHandler","confirmDeleteHandler","process","id","Authorization","onDelete","src","image","alt","title","description","window","open","address","creatorId","RecipeList","items","length","map","recipe","key","creator","coordinates","location","onDeleteRecipe","UserRecipes","loadedRecipes","setLoadedRecipes","useParams","recipes","fetchPlaces","deletedRecipeId","prevRecipes","MainHeader","NavLinks","SideDrawer","CSSTransition","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Users","React","lazy","NewRecipe","UpdateRecipe","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","uid","expirationDate","tokenExpirationData","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.075693ff.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {}\n});\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (\n    url,\n    method = 'GET',\n    body = null,\n    headers = {}\n  ) => {\n    setIsLoading(true);\n    const httpAbortCtrl = new AbortController();\n    activeHttpRequests.current.push(httpAbortCtrl);\n\n    try {\n      const response = await fetch(url, {\n        method: method,\n        body,\n        headers,\n        signal: httpAbortCtrl.signal\n      });\n\n      const responseData = await response.json();\n\n      activeHttpRequests.current = activeHttpRequests.current.filter(\n        reqCtrl => reqCtrl !== httpAbortCtrl\n      );\n\n      if (!response.ok) {\n        throw new Error(responseData.message);\n      }\n\n      setIsLoading(false);\n      return responseData;\n    } catch (err) {\n      setError(err.message);\n      setIsLoading(false);\n      throw err;\n    }\n  },\n  []\n);\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer;\nconst USER_DATA = \"userData\"\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationData =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      USER_DATA,\n      JSON.stringify({userId: uid,\n        token: token,\n        expiration: tokenExpirationData.toISOString()\n      })\n    );\n\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem(USER_DATA);\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, tokenExpirationDate)\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  // If user data exists, has a token and the expiry date is valid, log user in\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(USER_DATA));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\n// import Map from '../../shared/components/UIElements/Map';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './RecipeItem.css';\n\nconst RecipeItem = props => {\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const openRecipeHandler = () => {\n    window.open(props.address, '_blank');\n  };\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = async () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(process.env.REACT_APP_BACKEND_URL + `/recipes/${props.id}`,\n        'DELETE',\n        null,\n        {\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"recipe-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Definitely delete this recipe? Please note, this can't be undone.\n        </p>\n      </Modal>\n      <li className=\"recipe-item\">\n        <Card className=\"recipe-item__content\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"recipe-item__image\">\n            <img src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n            alt={props.title} />\n          </div>\n          <div className=\"recipe-item__info\">\n            <h2>{props.title}</h2>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"recipe-item__actions\">\n            <Button inverse onClick={openRecipeHandler}>\n              VIEW SITE\n            </Button>\n            {auth.userId === props.creatorId && (\n              <Button to={`/recipes/${props.id}`}>EDIT</Button>\n            )}\n\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default RecipeItem;\n","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport RecipeItem from './RecipeItem';\nimport Button from '../../shared/components/FormElements/Button';\nimport './RecipeList.css';\n\nconst RecipeList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"recipe-list center\">\n        <Card>\n          <h2>No recipes found. Create one?</h2>\n          <Button to=\"/recipes/new\">Share Recipe</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"recipe-list\">\n      {props.items.map(recipe => (\n        <RecipeItem\n          key={recipe.id}\n          id={recipe.id}\n          image={recipe.image}\n          title={recipe.title}\n          description={recipe.description}\n          address={recipe.address}\n          creatorId={recipe.creator}\n          coordinates={recipe.location}\n          onDelete={props.onDeleteRecipe}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default RecipeList;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport RecipeList from '../components/RecipeList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst UserRecipes = () => {\n  const [loadedRecipes, setLoadedRecipes] = useState();\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/recipes/user/${userId}`\n        );\n        setLoadedRecipes(responseData.recipes);\n      } catch (err) {}\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const recipeDeletedHandler = deletedRecipeId => {\n    setLoadedRecipes(prevRecipes =>\n      prevRecipes.filter(recipe => recipe.id !== deletedRecipeId)\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedRecipes && <RecipeList items={loadedRecipes} onDeleteRecipe={recipeDeletedHandler}/>}\n    </React.Fragment>\n  )\n};\n\nexport default UserRecipes;\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { AuthContext } from '../../context/auth-context';\nimport './NavLinks.css';\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/recipes`}>MY RECIPES</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/recipes/new\">ADD RECIPE</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">LOGIN</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>LOGOUT</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">Recipe Bloc</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, { Suspense } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\n\n// import Users from './user/pages/Users';\n// import NewRecipe from './recipes/pages/NewRecipe';\nimport UserRecipes from './recipes/pages/UserRecipes';\n// import UpdateRecipe from './recipes/pages/UpdateRecipe';\n// import Auth from './user/pages/Auth';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\n\nconst Users = React.lazy(() => import('./user/pages/Users'));\nconst NewRecipe = React.lazy(() => import('./recipes/pages/NewRecipe'));\n// const UserRecipes = React.lazy(() => import('./recipes/pages/UserRecipes'));\nconst UpdateRecipe = React.lazy(() => import('./recipes/pages/UpdateRecipe'));\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/recipes\" exact>\n          <UserRecipes />\n        </Route>\n        <Route path=\"/recipes/new\" exact>\n          <NewRecipe />\n        </Route>\n        <Route path=\"/recipes/:recipeId\">\n          <UpdateRecipe />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/recipes\" exact>\n          <UserRecipes />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner />\n                </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}